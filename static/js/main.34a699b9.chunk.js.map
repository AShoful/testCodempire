{"version":3,"sources":["UI/Header/Header.js","function.js","UI/Checkbutton/CheckboxesGroup.js","UI/Input/Input.js","UI/Radio/RadioButtonsGroup.js","UI/Select/ControlledOpenSelect.js","UI/renderUIComponents.js","UI/Button/ContainedButtons.js","Component/Ouiz.js","Component/Rezults.js","quiz.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","textAlign","height","color","fontWeight","Header","title","classes","Box","className","bgcolor","Typography","variant","initialState","arr","start","initState","init","i","length","key","isEmpty","object","hasOwnProperty","position","paddingLeft","formControl","margin","spacing","formLegend","width","paddingBottom","add","bottom","right","Checkboxes","question","handleSetAnswer","startState","isDisabled","React","useState","answers","state","setState","keyState","Object","keys","rezult","entries","filter","item","map","FormControl","component","FormGroup","FormControlLabel","control","Checkbox","checked","onChange","name","event","target","value","label","disabled","Fab","size","onClick","Divider","display","flexDirection","justifyContent","form","heigth","input","minWidth","Input","setValue","noValidate","autoComplete","TextField","toLocaleLowerCase","trim","FormLabel","RadioButtonsGroup","findIndex","toString","RadioGroup","Radio","select","ControlledOpenSelect","open","setOpen","Select","onClose","onOpen","MenuItem","renderUIComponents","obj1","obj2","arrAnswers","rightAnswers","check","values","JSON","stringify","renderRezult","style","answerSelectionType","link","textDecoration","ContainedButtons","button","linkName","path","Button","to","Quiz","quiz","window","confirm","localStorage","removeItem","location","reload","store","setItem","alert","countNoQuestions","questions","arrNoAnswers","when","message","Rezult","App","parse","getItem","e","console","log","massage","initialQuizState","setAnswer","quizes","setQuzes","handleSetQuzes","obj","useEffect","axios","get","then","res","data","catch","appQuiz","LinearProgress","answer","appRezults","Rezults","exact","render","Boolean","hostname","match","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.34a699b9.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    textAlign: 'center',\r\n    height: '60px',\r\n    color: 'white',\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\nexport default function Header({title}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}  bgcolor=\"primary.main\" \r\n      color=\"primary.contrastText\">\r\n      <Typography variant=\"h5\" >\r\n        {title}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}","export const initialQuizState = (arr, start) => {\r\n    try{\r\n        const store = JSON.parse(localStorage.getItem(`storeQuiz`))\r\n        return store ? store : initialState(arr, start)\r\n    } catch (e) {\r\n        console.log(e.massage)\r\n        localStorage.removeItem(`storeQuiz`)\r\n        return initialState(arr, start)\r\n    }\r\n}\r\n\r\nexport const initialState = (arr, start, initState = []) =>{\r\n    let init = {}\r\n    for(let i = start; i < arr.length + start; i++){\r\n      init[i] = false\r\n    }\r\n    for(let i = 0; i < initState.length; i++){\r\n        let key = initState[i]\r\n        init[key - 1] = true\r\n    }\r\n    return init\r\n}\r\n\r\nexport const countAnswers = (obj) => {\r\n    return Object.values(obj).filter(i => i).length  \r\n}  \r\n\r\nexport const deepEqual = (obj1, obj2) => {\r\n  return JSON.stringify(obj1)===JSON.stringify(obj2);\r\n}\r\n\r\nexport const equal = (obj1, obj2) => {\r\n    return Object.values(obj1).map((item, i) => \r\n    JSON.stringify(item) === JSON.stringify(Object.values(obj2)[i]))\r\n}\r\n\r\nexport const onSaveState = (store) => {\r\n    localStorage.removeItem(`storeQuiz`)\r\n    localStorage.setItem(`storeQuiz`, JSON.stringify(store))\r\n    alert(`Выши ответы успешно сохранены`)\r\n}\r\n\r\nexport const  clearState = () => {\r\n    if (window.confirm('Вы хотите очистить ответы?')) {\r\n    localStorage.removeItem(`storeQuiz`);\r\n    window.location.reload()\r\n    }\r\n}\r\n\r\nexport const isEmpty = object => {\r\n    for (var key in object)\r\n        if (object.hasOwnProperty(key)) return false;\r\n    return true;\r\n}\r\n    ","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Box from '@material-ui/core/Box';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { initialState } from '../../function'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: 'relative',\r\n    paddingLeft: 20,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  formLegend:{\r\n    color: 'black',\r\n    fontWeight: 700,\r\n    width: '95%',\r\n    paddingBottom: '20px'\r\n  },\r\n  add:{\r\n    position: 'absolute',\r\n    bottom: 15,\r\n    right:20\r\n  }\r\n}));\r\n\r\nexport default function Checkboxes({question, i, handleSetAnswer,\r\n   startState, isDisabled}) {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useState(initialState(question.answers, 0, startState));\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n  \r\n  const keyState = Object.keys(state)\r\n  const rezult = Object.entries(state)\r\n    .filter(item => item[1]).map(i => +i[0] + 1)\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography variant=\"h6\" color='primary'>\r\n        {question.question} \r\n      </Typography>\r\n      <FormControl component=\"fieldset\" \r\n        className={classes.formControl} >\r\n        <FormGroup>\r\n          {question.answers.map((item, i) =>  \r\n          <FormControlLabel\r\n          key = {i}\r\n          control={<Checkbox \r\n          color=\"primary\" \r\n          checked={state[i]} \r\n          onChange={handleChange(keyState[i])} value={keyState[i]} />}\r\n          label={item}\r\n          disabled={isDisabled}\r\n        />)}  \r\n        </FormGroup>\r\n      </FormControl>\r\n      {!isDisabled ? \r\n      <Fab className={classes.add} \r\n        size={'small'} \r\n        color='primary' \r\n        onClick={() => handleSetAnswer(i, rezult) }>+\r\n      </Fab> : \r\n        null}      \r\n      <Divider/>\r\n    </Box>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: 'relative',\r\n    paddingLeft: 20,\r\n    height: 200,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    color: 'black',\r\n    fontWeight: 700,\r\n    },\r\n  form: {\r\n      margin: theme.spacing(1),\r\n      heigth: '100px',\r\n    },\r\n  input: {\r\n      minWidth: '300px'\r\n  },\r\n  add: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    right: 20\r\n  }  \r\n  }));\r\n\r\nexport default function Input({question, handleSetAnswer, i, \r\n  startState, isDisabled}) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(startState ? startState : '');\r\n  \r\n  const handleChange = event => {\r\n    setValue(event.target.value);\r\n  };\r\n  \r\n  return <> \r\n    <Box className={classes.root}>\r\n      <Typography variant=\"h6\" color='primary'>\r\n        {question.question} \r\n      </Typography>\r\n      <form className={classes.form} noValidate autoComplete=\"off\" >\r\n        <TextField \r\n          label='Your reply' \r\n          value={value} \r\n          onChange={handleChange}  \r\n          className={classes.input} \r\n          disabled={isDisabled}/>\r\n      </form>\r\n      {!isDisabled ? \r\n        <Fab className={classes.add} \r\n          size={'small'} \r\n          color='primary' \r\n          onClick={() => handleSetAnswer(i, value.toLocaleLowerCase().trim()) }>\r\n          + \r\n        </Fab> : null}\r\n    </Box>\r\n    <Divider/>\r\n  </>\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Box from '@material-ui/core/Box';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root:{\r\n    position: 'relative',\r\n    paddingLeft: 20,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  FormLabel:{\r\n    color: 'black',\r\n    fontWeight: 700,\r\n  },\r\n  add:{\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    right: 20,\r\n  }\r\n}));\r\n\r\nexport default function RadioButtonsGroup({question, handleSetAnswer, i, startState, isDisabled} ) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(startState ? \r\n    question.answers[startState-1] : '');\r\n\r\n  const handleChange = event => {\r\n    setValue(event.target.value);\r\n  };\r\n  const rezult = (question.answers\r\n    .findIndex(item => item === value) + 1).toString()\r\n  \r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography variant=\"h6\" color='primary'>\r\n        {question.question} \r\n      </Typography>\r\n      <FormControl component=\"fieldset\" \r\n        className={classes.formControl}  >\r\n        <RadioGroup value={value} onChange={handleChange} >\r\n          {question.answers.map((item, i) => \r\n          <FormControlLabel value={item} \r\n            key={i} \r\n            disabled={isDisabled}\r\n            control={<Radio color=\"primary\"/>} \r\n            label={item} />)}\r\n        </RadioGroup>\r\n      </FormControl>\r\n      {!isDisabled ? \r\n      <Fab className={classes.add} \r\n        size={'small'} \r\n        color='primary' \r\n        onClick={() => handleSetAnswer(i, rezult)}>+\r\n      </Fab> : null}\r\n      <Divider />\r\n    </Box>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root:{\r\n    position:\"relative\",\r\n    paddingLeft: 20,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n    minWidth: 320,\r\n  },\r\n  add:{\r\n    position: 'absolute',\r\n    right: 20,\r\n    bottom: 20\r\n  },\r\n  select:{\r\n    minWidth: '300px'\r\n  }\r\n}));\r\n\r\nexport default function ControlledOpenSelect({question, i, \r\n  handleSetAnswer, startState, isDisabled}) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(startState ? startState : '');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = event => {\r\n    setValue(event.target.value.toString());\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  \r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography variant=\"h6\" color='primary'>\r\n        {question.question} \r\n      </Typography>\r\n      <FormControl className={classes.formControl} \r\n        disabled={isDisabled}>\r\n        <Select className={classes.select}\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          {question.answers.map((item, i) => \r\n            <MenuItem  \r\n              value={i+1} \r\n              key={i}> {i+1} {item}</MenuItem>\r\n          )}\r\n        </Select>\r\n      </FormControl>\r\n      {!isDisabled ? \r\n        <Fab className={classes.add} \r\n          size={'small'} \r\n          color='primary'\r\n          onClick={() => handleSetAnswer(i, value) }>\r\n            +\r\n        </Fab> : null} \r\n      <Divider />\r\n    </Box>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport CheckboxesGroup from './Checkbutton/CheckboxesGroup'\r\nimport Input from './Input/Input'\r\nimport RadioButtonsGroup from './Radio/RadioButtonsGroup'\r\nimport ControlledOpenSelect from './Select/ControlledOpenSelect'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { equal } from '../function'\r\n\r\nexport function renderUIComponents({item, i, handleSetAnswer, arrAnswers, rightAnswers, isDisabled}) {\r\n  const check = rightAnswers ? equal(arrAnswers, rightAnswers) : null\r\n  \r\n  const renderRezult = rightAnswers ? \r\n    <Typography variant={'subtitle1'} \r\n      color={check[i] ? 'primary' : 'secondary'}\r\n      style={{paddingLeft: 10}}> \r\n      Правильный ответ \"{Object.values(rightAnswers)[i].toString()}\". \r\n      Вы ответили {check[i] ? 'правильно' : 'неправильно'} \r\n    </Typography> \r\n    : null;\r\n\r\n  switch (item.answerSelectionType) {\r\n    case 'radio':\r\n      return < Fragment key={i}>\r\n      <RadioButtonsGroup i={i}\r\n      isDisabled={isDisabled} \r\n      handleSetAnswer={handleSetAnswer}  \r\n      question={item}\r\n      startState={arrAnswers[i]} />\r\n      {renderRezult}\r\n      <Divider/>\r\n      </Fragment>\r\n    case 'input':\r\n      return <Fragment key={i}> \r\n      <Input i={i}\r\n      isDisabled={isDisabled} \r\n      handleSetAnswer={handleSetAnswer}\r\n      question = {item} \r\n      startState={arrAnswers[i]}/>\r\n      {renderRezult}\r\n      <Divider/>\r\n      </Fragment>\r\n    case 'select':\r\n      return <Fragment key={i}> \r\n      <ControlledOpenSelect i={i}\r\n      isDisabled={isDisabled} \r\n      handleSetAnswer={handleSetAnswer} \r\n      question = {item}\r\n      startState={arrAnswers[i]}/>\r\n      {renderRezult}\r\n      <Divider/>\r\n      </Fragment>\r\n    case 'checkbox':\r\n      return  <Fragment key={i}>\r\n      <CheckboxesGroup \r\n      i={i} \r\n      isDisabled={isDisabled}\r\n      handleSetAnswer={handleSetAnswer} \r\n      question = {item}\r\n      startState={arrAnswers[i]}/>\r\n      {renderRezult}\r\n      <Divider/>\r\n      </Fragment>\r\n    default: \r\n    return null\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box'\r\nimport { Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  link:{\r\n    textDecoration: 'none'\r\n  }\r\n}));\r\n\r\nexport default function ContainedButtons({button, linkName, path}) {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Box className={classes.root}>\r\n      {button.map((item, i) => \r\n      <Button variant=\"outlined\"\r\n        key={i}\r\n        onClick={item.onClick}\r\n        color={item.color}>\r\n        {item.name}\r\n      </Button>)}\r\n      <Button color=\"primary\" variant=\"outlined\" >\r\n        <Link to={path} \r\n          className={classes.link}> {linkName} </Link>\r\n      </Button>\r\n    </Box>\r\n  );\r\n}","import React  from 'react';\r\nimport { Prompt } from \"react-router-dom\";\r\nimport Header from '../UI/Header/Header'\r\nimport Box from '@material-ui/core/Box'\r\nimport { onSaveState, clearState } from '../function'\r\nimport { renderUIComponents } from '../UI/renderUIComponents'\r\nimport ContainedButtons from '../UI/Button/ContainedButtons'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  },\r\n  link:{\r\n    textDecoration: 'none'\r\n  }\r\n}));\r\n\r\nfunction Quiz({quiz, handleSetAnswer, answers, isDisabled}) {\r\n  const classes = useStyles();\r\n  const button = [\r\n  { \r\n    name: 'clear',\r\n    onClick: () => clearState(),\r\n    color: 'secondary' \r\n  },\r\n  { \r\n    name: 'save',\r\n    onClick: () => onSaveState(answers),\r\n    color: 'primary'\r\n  }]\r\n \r\n  const arrAnswers = Object.values(answers)\r\n  const countNoQuestions = quiz.questions.length - \r\n    arrAnswers.filter(item => item).length\r\n  const arrNoAnswers = Object.entries(answers)\r\n    .filter(item => !item[1]).map(i => +i[0])\r\n    \r\n  return  <Box className={classes.root} >\r\n    <Header title={'Questions'}/>\r\n    {quiz.questions.map((item, i) => \r\n      renderUIComponents({item, i, handleSetAnswer, arrAnswers, \r\n      isDisabled}))}\r\n    <ContainedButtons  button={button} \r\n      linkName={'Rezult'} \r\n      path={'/rezults'}/>\r\n    <Prompt\r\n      when={!!countNoQuestions}\r\n      message={() => \r\n        `Вы не оветили, или не сохранили ответы на \r\n        ${arrNoAnswers.toString()} вопросы. Продолжить?`}\r\n      /> \r\n    </Box>\r\n}\r\n\r\nexport default Quiz\r\n","import React  from 'react';\r\nimport Header from '../UI/Header/Header'\r\nimport ContainedButtons from '../UI/Button/ContainedButtons'\r\nimport Box from '@material-ui/core/Box'\r\nimport { renderUIComponents } from '../UI/renderUIComponents'\r\n\r\nfunction Rezult({quiz, handleSetAnswer, answers, isDisabled}) {\r\n      \r\n  const arrAnswers = Object.values(answers)\r\n  const rightAnswers = quiz.rightAnswers\r\n   \r\n  return  <Box >\r\n    <Header title={'Rezults'}/>\r\n      {quiz.questions.map((item, i) => \r\n      renderUIComponents({item, i, handleSetAnswer, arrAnswers, \r\n        rightAnswers, isDisabled}))}\r\n    <ContainedButtons  \r\n      button={[]} \r\n      linkName={'Ouiz'}\r\n      path={'/'} />\r\n  </Box>\r\n}\r\n\r\nexport default Rezult\r\n","export const quiz =  {\r\n    \"questions\": [\r\n      {\r\n        \"question\": \"How can you access the state of a component from inside of a member function?\",\r\n        \"answerSelectionType\": \"radio\",\r\n        \"answers\": [\r\n          \"this.getState()\",\r\n          \"this.prototype.stateValue\",\r\n          \"this.state\",\r\n          \"this.values\"\r\n        ],\r\n      },\r\n      {\r\n        \"question\": \"ReactJS is developed by _____ Engineers?\",\r\n        \"answerSelectionType\": \"input\",\r\n        \"rightAnswers\": [\r\n          \"Google Engineers\",\r\n          \"Facebook Engineers\"\r\n        ],\r\n       },\r\n      {\r\n        \"question\": \"ReactJS is an MVC based framework?\",\r\n        \"answerSelectionType\": \"radio\",\r\n        \"answers\": [\r\n          \"True\",\r\n          \"False\"\r\n        ],\r\n      },\r\n      {\r\n        \"question\": \"Which of the following concepts is/are key to ReactJS?\",\r\n        \"answerSelectionType\": \"select\",\r\n        \"answers\": [\r\n          \"Component-oriented design\",\r\n          \"Event delegation model\",\r\n          \"Both of the above\",\r\n        ],\r\n      },\r\n      {\r\n        \"question\": \"What are the advantages of React JS?\",\r\n        \"answerSelectionType\": \"checkbox\",\r\n        \"answers\": [\r\n          \"React can be used on client and as well as server side too\",\r\n          \"Using React increases readability and makes maintainability easier. Component, Data patterns improves readability and thus makes it easier for manitaining larger apps\",\r\n          \"React components have lifecycle events that fall into State/Property Updates\",\r\n          \"React can be used with any other framework (Backbone.js, Angular.js) as it is only a view layer\"\r\n        ],\r\n      },\r\n    ],\r\n    \"rightAnswers\": {\r\n      \"'1'\": \"3\",\r\n      \"'2'\": \"facebook\",\r\n      \"'3'\": \"2\",\r\n      \"'4'\": \"3\",\r\n      \"'5'\": [1, 2, 4]\r\n    },\r\n  } ","import React, { useState, useEffect } from 'react';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Quiz from './Component/Ouiz'\r\nimport Rezults from './Component/Rezults'\r\nimport Box from '@material-ui/core/Box'\r\nimport { quiz } from './quiz'\r\nimport { initialQuizState, isEmpty } from './function'\r\nimport axios from 'axios'\r\n\r\nfunction App() {\r\n\r\n  const [answers, setAnswer] = useState(initialQuizState(quiz.questions, 1)) \r\n  const [quizes, setQuzes] = useState({})\r\n  \r\n  const handleSetAnswer = (i, answer) => {\r\n    setAnswer({...answers, [i + 1]:answer})\r\n  }\r\n\r\n  const handleSetQuzes = obj => {\r\n    setQuzes({...obj})\r\n  }\r\n\r\n  useEffect(()=> {\r\n\t\taxios.get('https://react-quiz-5cb66.firebaseio.com/testCodempire.json')\r\n    .then(res => Object.values(res.data)[0])\r\n    .then(res => handleSetQuzes(res))\r\n    .catch((e) => {\r\n      console.log(e)\r\n      handleSetQuzes(quiz)\r\n    }) \r\n\t\t}, [])\r\n  \r\n  const appQuiz = isEmpty(quizes) ? \r\n    <LinearProgress /> :\r\n    <Quiz quiz = {quizes} \r\n      isDisabled={false}\r\n      handleSetAnswer ={handleSetAnswer}\r\n      answers={answers}/> \r\n\r\n  const appRezults = isEmpty(quizes) ?\r\n    <LinearProgress /> :\r\n    <Rezults quiz = {quizes} \r\n      isDisabled={true}\r\n      answers={answers}/>\r\n  \r\n  return  <Box className='App'>\r\n    <Switch>\r\n      <Route path=\"/\" exact render={() => appQuiz} />\r\n      <Route path=\"/rezults\" render={() => appRezults} />\r\n    </Switch>\r\n  </Box>\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter} from 'react-router-dom'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  )\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}